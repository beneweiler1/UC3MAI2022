

class CalcMatrix:
	def __init__(self, data, states_list, names_sem: list):
		# note that the number of directions is autogenerated
		self.num_dir = 3
		self.number_states = len(states_list)
		self.states_list = states_list
		self.data = data
		self.names_sem = names_sem

	def create_matrix(self, action: str):
		my_action = [action]
		my_matrix = []
		# we go through each state ( iteration of rows in matrix )
		row = 0
		# while row < self.number_states:
		while row < 7:
			new_row = []
			column = 0
			my_counter = 0
			my_counter_all = 0
			# we go through each state ( iteration in columns for each row )
			# while column < self.number_states - 1:
			while column < 7:
				i = 1
				# while i < len(self.data):
				while i < 8786:
					if self.data[i][0] == self.states_list[row] and self.data[i][1] == my_action:
						my_counter_all += 1
						if self.data[i][2] == self.states_list[column]:
							my_counter += 1
					i += 1
				column += 1
				new_row.append(my_counter / my_counter_all)
			my_matrix.append(new_row)
			row += 1

		return my_matrix






















